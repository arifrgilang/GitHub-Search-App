plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    def globalConfig = rootProject.extensions.getByName("ext")

    compileSdk globalConfig.getAt("compileSdkVersion")

    defaultConfig {
        minSdk globalConfig.getAt("minSdkVersion")
        targetSdk globalConfig.getAt("targetSdkVersion")
        versionCode globalConfig.getAt("versionCode")
        versionName globalConfig.getAt("versionName")

        testInstrumentationRunner globalConfig.getAt("testInstrumentationRunner")
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField "String", "BASE_URL", "\"https://api.github.com/\""
        }
        release {
            buildConfigField "String", "BASE_URL", "\"https://api.github.com/\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    kapt {
        generateStubs = true
    }
}

dependencies {
    def dataDependencies = rootProject.ext.dataDependencies

    implementation project(':domain')

    implementation dataDependencies.dagger
    implementation dataDependencies.retrofit
    implementation dataDependencies.gson
    implementation dataDependencies.okHttp
    implementation dataDependencies.rxJava
    implementation dataDependencies.rxAndroid
    implementation dataDependencies.roomKtx
    implementation dataDependencies.roomRuntime

    kapt dataDependencies.daggerCompiler
//    annotationProcessor dataDependencies.roomCompiler

    kapt dataDependencies.roomKapt

    testImplementation dataDependencies.junit
    testImplementation dataDependencies.mockito
    testImplementation dataDependencies.powerMock
    testImplementation dataDependencies.powerMockModule
    testImplementation dataDependencies.powerMockApi
}