ext {
    // Android
    applicationId = "com.arifrgilang.githubsearchapp"
    minSdkVersion = 21
    targetSdkVersion = 31
    compileSdkVersion = 31
    versionCode = 1
    versionName = "1.0"
    testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

    // Dependencies
    coreKtxVersion = '1.7.0'
    appCompatVersion = '1.4.1'
    materialVersion = '1.5.0'
    constraintLayoutVersion = '2.1.3'
    junitVersion = '4.13.2'
    androidJunitVersion = '1.1.3'
    espressoVersion = '3.4.0'
    glideVersion = '4.11.0'
    circularImageViewVersion = '4.3.0'
    swipeRefreshLayoutVersion = '1.1.0'
    retrofitVersion = '2.9.0'
    okHttpVersion = '4.6.0'
    daggerVersion = '2.41'
    rxJavaVersion = '2.2.19'
    rxAndroidVersion = '2.1.1'
    mockitoVersion = '4.3.1'
    powerMockVersion = '2.0.9'
    javaxInjectVersion = '1'
    roomVersion = '2.3.0'
    timberVersion = '4.7.1'
    mmkvVersion = '1.2.12'
    arrowVersion = '1.0.0'
    mockitoKotlinVersion = '2.2.0'
    mockkVersion = '1.12.2'
    archCoreTestingVersion = '2.1.0'

    appDependencies = [
            coreKtx             : "androidx.core:core-ktx:${coreKtxVersion}",
            appCompat           : "androidx.appcompat:appcompat:${appCompatVersion}",
            material            : "com.google.android.material:material:${materialVersion}",
            constraintLayout    : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            junit               : "junit:junit:${junitVersion}",
            androidJunit        : "androidx.test.ext:junit:${androidJunitVersion}",
            espresso            : "androidx.test.espresso:espresso-core:${espressoVersion}",
            glide               : "com.github.bumptech.glide:glide:${glideVersion}",
            glideCompiler       : "com.github.bumptech.glide:compiler:${glideVersion}",
            circularImageView   : "com.mikhaellopez:circularimageview:${circularImageViewVersion}",
            swipeRefreshLayout  : "androidx.swiperefreshlayout:swiperefreshlayout:${swipeRefreshLayoutVersion}",
            timber              : "com.jakewharton.timber:timber:${timberVersion}",
            daggerCompiler      : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger              : "com.google.dagger:dagger:${daggerVersion}",
            daggerAndroidSupport: "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerAndroid       : "com.google.dagger:dagger-android:${daggerVersion}",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}",
            rxJava              : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            rxAndroid           : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            mockito             : "org.mockito:mockito-core:${mockitoVersion}",
            mockitoAndroid      : "org.mockito:mockito-core:${mockitoVersion}",
            powerMock           : "org.powermock:powermock-core:${powerMockVersion}",
            powerMockModule     : "org.powermock:powermock-module-junit4:${powerMockVersion}",
            powerMockApi        : "org.powermock:powermock-api-mockito2:${powerMockVersion}",
            mmkv                : "com.tencent:mmkv:${mmkvVersion}",
            retrofit              : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            gson                 : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            okHttp               : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            mockk                : "io.mockk:mockk:${mockkVersion}",
            archCoreTesting      : "androidx.arch.core:core-testing:${archCoreTestingVersion}"
    ]

    dataDependencies = [
            daggerCompiler       : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}",
            dagger               : "com.google.dagger:dagger:${daggerVersion}",
            daggerAndroidSupport : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerAndroid        : "com.google.dagger:dagger-android:${daggerVersion}",
            retrofit              : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitRxJava        : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            gson                 : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            okHttp               : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            rxJava               : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            rxAndroid            : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            roomKapt             : "androidx.room:room-compiler:${roomVersion}",
            roomKtx              : "androidx.room:room-ktx:${roomVersion}",
            roomRuntime          : "androidx.room:room-runtime:${roomVersion}",
            junit                : "junit:junit:${junitVersion}",
            mockito              : "org.mockito:mockito-core:${mockitoVersion}",
            powerMock            : "org.powermock:powermock-core:${powerMockVersion}",
            powerMockModule      : "org.powermock:powermock-module-junit4:${powerMockVersion}",
            powerMockApi         : "org.powermock:powermock-api-mockito2:${powerMockVersion}",
            mmkv                 : "com.tencent:mmkv:${mmkvVersion}",
            arrow                : "com.fernandocejas:arrow:${arrowVersion}",
            mockk                : "io.mockk:mockk:${mockkVersion}"
    ]

    domainDependencies = [
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}",
            rxJava         : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            rxAndroid      : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            junit          : "junit:junit:${junitVersion}",
            timber         : "com.jakewharton.timber:timber:${timberVersion}",
            mockito        : "org.mockito:mockito-core:${mockitoVersion}",
            powerMock      : "org.powermock:powermock-core:${powerMockVersion}",
            powerMockModule: "org.powermock:powermock-module-junit4:${powerMockVersion}",
            powerMockApi   : "org.powermock:powermock-api-mockito2:${powerMockVersion}",
            mockitoKotlin  : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
            mockk          : "io.mockk:mockk:${mockkVersion}",
            archCoreTesting      : "androidx.arch.core:core-testing:${archCoreTestingVersion}"
    ]
}